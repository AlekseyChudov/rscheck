# RSCheck example configuration
#
# The strategy used for options in the example rscheck.conf shipped with RSCheck
# is to specify all options with their default value, but leave them commented.

# Logging configuration https://docs.python.org/2/library/logging.html
logging:
    format: '%(levelname)s: %(threadName)s: %(message)s'
    level: DEBUG

threads:
    server:
        class: HTTPServerThread
        address: 0.0.0.0
        port: 81
        location: /getstatus
        # keep_alive: true
        # request_timeout: 3
        # query_cache_ttl: 5
        # query_timeout: 1
        # wait_status_interval: 3
        # wait_status_timeout: 0
        # error_message: true
        # access_log: true
        # error_log: true

    maintenance:
        class: MaintenanceThread
        interval: 60
        # error_message: true

    default-routes:
        class: CheckDefaultRoutes
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    dns-example.com:
        class: CheckDNS
        host: 127.0.0.1
        qname: example.com
        # qtype: A
        # port: 53
        # tcp: false
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    # dns-example.net:
        # class: CheckDNS
        # host: 127.0.0.1
        # qname: example.net
        # qtype: A
        # port: 53
        # tcp: false
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    interfaces:
        class: CheckInterfaces
        interfaces:
            - eth0
            - eth1
        # interval: 3
        # timeout: 1
        # error_message: true

    http:
        class: CheckURL
        url: http://127.0.0.1/getstatus
        response: ^true
        # interval: 3
        # timeout: 1
        # error_message: true
        status_message: true

    # https:
        # class: CheckURL
        # url: https://127.0.0.1/getstatus
        # response: ^true
        # status_message: false
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    # tcp-80:
        # class: CheckTCP
        # host: 127.0.0.1
        # port: 80
        # use_ssl: false
        # interval: 3
        # timeout: 1
        # error_message: true

    tcp-443:
        class: CheckTCP
        host: 127.0.0.1
        port: 443
        use_ssl: true
        # interval: 3
        # timeout: 1
        # error_message: true

    udp-443:
        class: CheckUDPRequest
        host: 127.0.0.1
        port: 443
        request: "getstatus\n"
        response: ^true
        # max_response_size: 1024
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    status-file:
        class: CheckStatusFile
        status_file: /var/log/rscheck.status
        # status_file_ttl: 7200
        # success_string: OK
        # error_string: ERROR
        # interval: 3
        # timeout: 1
        # error_message: true
        # status_message: false

    sysclt:
        class: CheckSysctl
        variables:
            net.ipv4.conf.all.accept_redirects: 0
            net.ipv4.conf.all.arp_announce: 2
            net.ipv4.conf.all.arp_filter: 1
            net.ipv4.conf.all.arp_ignore: 1
            net.ipv4.conf.all.rp_filter: 0
            net.ipv4.conf.default.accept_redirects: 0
            net.ipv4.conf.default.arp_announce: 2
            net.ipv4.conf.default.arp_filter: 1
            net.ipv4.conf.default.arp_ignore: 1
            net.ipv4.conf.default.rp_filter: 0
            net.ipv4.icmp_echo_ignore_broadcasts: 1
            net.ipv4.tcp_sack: 1
            net.ipv4.tcp_synack_retries: 3
            net.ipv4.tcp_syncookies: 1
            net.ipv4.tcp_syn_retries: 3
            net.ipv4.tcp_timestamps: 1
            net.ipv4.tcp_window_scaling: 1
        # interval: 3
        # error_message: true
